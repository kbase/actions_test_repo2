---
name: Build Image without pushing
on:
  workflow_call:
jobs:
  build-image:
    runs-on: ubuntu-latest
#    container: jsfillman/kb-sdk
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

#      - name: Check file existence
#        id: check_files
#        uses: andstor/file-existence-action@v1
#        with:
#          files: "kbase.yml, Makefile, *.spec"
#
#      - name: Run kb-sdk compile
#        if: steps.check_files.outputs.files_exists == 'true'
#        run: |
#          cd $GITHUB_WORKSPACE;
#          if [ -f kbase.yml ] && [ -f Makefile ] && [ -f *.spec ] ; then
#            make compile;
#          else
#            echo "Not a kb-sdk dependent app, skipping."
#          fi

      - name: Create github action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = '${{ inputs.tags }}'.split(',');
            const username = '${{ github.event.repository.owner.login }}';
            const repoName = '${{ inputs.name }}';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');

      - name: Build without push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: false
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: '${{ steps.tags.outputs.result }}'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ steps.tags.outputs.result }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'